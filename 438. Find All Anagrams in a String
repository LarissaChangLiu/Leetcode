//https://discuss.leetcode.com/topic/64434/shortest-concise-java-o-n-sliding-window-solution
public class Solution {
    public List<Integer> findAnagrams(String s, String p) {
        if (s == null || s.length() == 0 || p == null || p.length() == 0 || s.length() < p.length()){
            return new ArrayList<Integer>();
        }
        List<Integer> list = new ArrayList<Integer>();
        int[] map = new int[256];
        for (int i = 0; i < p.length(); i++){
            map[(int)p.charAt(i)]++;
        }
        int left = 0;
        int right = 0;
        int count = p.length();
        while (right < s.length()){
            if (map[s.charAt(right++)]-- >= 1){
                count--;
            }
            if (count == 0){
                list.add(left);
            }
            if (right - left  == p.length() && map[s.charAt(left++)]++ >= 0){
                count++;
            }
        }
        return list;
    }
}

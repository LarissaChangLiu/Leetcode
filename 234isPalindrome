/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isPalindrome(ListNode head) {
        if (head == null || head.next == null){
            return true;
        }
        ListNode fast = head;
        ListNode slow = head;
        while (fast.next != null && fast.next.next != null){
            fast = fast.next.next;
            slow = slow.next;
        }
        fast = slow.next;
        slow.next = null;
        ListNode prev = null;
        while (fast != null){
            prev = fast.next;
            fast.next = slow;
            slow = fast;
            fast = prev;
        }
        prev = slow; // got wrong on this line once
        fast = head;
        boolean res = true;
        while (slow != null && fast != null){
            if (slow.val != fast.val){
                res = false;
                break;
            }
            slow = slow.next;
            fast = fast.next;
        }
        fast = prev.next;
        prev.next = null;
        while(fast != null){
            slow = fast.next;
            fast.next = prev;
            prev = fast;
            fast = slow;
        }
        return res;
    }
}
